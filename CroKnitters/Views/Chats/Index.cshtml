@model List<ChatsViewModel>
@{
    ViewData["Title"] = "Chats";
}

<div class="container mx-auto">



    <!--container for the chats list section and messages section-->
    <div class="pt-3">

        <a asp-controller="Groups" asp-action="Index" class="w-auto justify-center rounded-md bg-indigo-600 m-3 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 mt-2">Groups</a>

        <!--chats list-->
        <div class="flex-1 sm:w-full sm:max-w-sm rounded-lg border text-center shadow-xl h-auto m-5 justify-content-center bg-white chats-list">

            @if (TempData["error"] != null)
            {
                <p class="text-danger">
                    @TempData["error"]
                </p>
            }
            <h2 class="text-2xl text-center p-2 font-bold"> My Private Chats</h2>
            <hr />

            <div class="sm:w-full sm:max-w-sm p-4">
                <ul role="list" class="divide-y divide-grey-900">
                    <!--If the user has no chats-->
                    @if (Model == null || Model.Count == 0)
                    {
                        <p class="text-5xl"> OOPS! Looks like you have no one to talk to. Search for a user with their name to message them.</p>

                        <div class=" text-center p-1">
                            @using (Html.BeginForm("Index", "Chats", FormMethod.Get))
                            {
                                <div class="input-group search">
                                    <input type="text" class="form-control rounded-3 w-25" name="search" placeholder="Search for user...">
                                    <div class="col-sm-2 input-group-append">
                                        <button class="btn btn-outline-secondary btn-dark" type="submit">Search</button>
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="p-2">
                        <!--show the user's info-->
                        @foreach (var item in Model)
                        {
                            @foreach (var user in item.users)
                            {
                                <div class="flex min-w-0 gap-x-4">
                                        <img class="h-12 w-12 flex-none rounded-full bg-gray-50" src="@("~/img/profile/"+user.Image.ImageSrc)" asp-append-version="true" alt="User Profile Picture">
                                    <div class="min-w-0 flex-auto">
                                        <h3 class="text-sm font-semibold leading-6 text-gray-900">@user.FirstName @user.LastName</h3>
                                        <a asp-controller="Chats" asp-action="ChatUser" asp-route-id="@user.UserId" class="btn btn-primary">Message</a>
                                    </div>
                                </div>
                            }
                        }
                        </div>
                    }
                    else
                    {
                        @foreach (var chat in Model)
                        {
                            <li class="flex justify-between gap-x-6 py-5">
                                <!--show the user's info-->
                                <a asp-controller="Chats" asp-action="PrivateChat" asp-route-id="@chat.PartnerId" class="">
                                    <div class="flex min-w-0 gap-x-4">
                                        <img class="h-12 w-12 flex-none rounded-full bg-gray-50" src="@("~/img/profile/"+chat.UserImageSrc)" asp-append-version="true" alt="User Profile Picture">
                                        <div class="min-w-0 flex-auto">
                                            <h3 class="text-sm font-semibold leading-6 text-gray-900">@chat.PartnerUserName</h3>
                                            <p class="mt-1 truncate text-xs leading-5 text-gray-500">
                                                @{
                                                    string truncatedMessage = chat.LastMessage.Length > 20 ? chat.LastMessage.Substring(0, 20) + "..." : chat.LastMessage;
                                                }
                                                @truncatedMessage @chat.LastMessageDate
                                            </p>
                                        </div>
                                    </div>

                                </a>
                            </li>
                            <hr />
                        }
                    }

                </ul>
            </div>
        </div>
    </div>
</div>


