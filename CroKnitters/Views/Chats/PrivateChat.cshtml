@model IEnumerable<MessageViewModel>
@{
    ViewData["Title"] = "Private Chat";
}

<div class="container mx-auto">

    @*     <div class=" text-center">
    @using (Html.BeginForm("#", "#", FormMethod.Get))
    {
    <div class="input-group search">
    <input type="text" class="form-control rounded-3 w-25" name="search" placeholder="Search...">
    <div class="col-sm-2 input-group-append">
    <button class="btn btn-outline-secondary btn-dark" type="submit">Search</button>
    </div>
    </div>
    }
    </div> *@

    <!--container for the chats list section and messages section-->
    <div class="flex">
        <!--chats list-->
        @*         <div class="flex-1 sm:w-full sm:max-w-sm rounded-lg border text-center shadow-xl h-auto m-5 justify-content-start bg-white chats-list">

        @if (TempData["error"] != null)
        {
        <p class="text-danger">
        @TempData["error"]
        </p>
        }

        <div class="sm:w-full sm:max-w-sm p-4">
        <ul role="list" class="divide-y divide-grey-900">
        <li class="flex justify-between gap-x-6 py-5">
        <!--show the user's info-->
        <a asp-controller="" asp-action="" class="">
        <div class="flex min-w-0 gap-x-4">
        <img class="h-12 w-12 flex-none rounded-full bg-gray-50" src="https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="">
        <div class="min-w-0 flex-auto">
        <p class="text-sm font-semibold leading-6 text-gray-900">Leslie Alexander</p>
        <p class="mt-1 truncate text-xs leading-5 text-gray-500">leslie.alexander@example.com</p>
        </div>
        </div>

        </a>
        </li>
        <hr />
        </ul>
        </div>
        </div> *@


        <!--messages-->
        <div class="flex-1 rounded-lg border text-center w-auto h-auto shadow-xl m-5 justify-content-start bg-white messages">
            @if (TempData["error"] != null)
            {
                <p class="text-danger">
                    @TempData["error"]
                </p>
            }

            <div class="p-4">
                <!--messages themselves-->

                <div class="messageList">
                    <!--loop through the messages and arrange them accordingly-->
                    @foreach (var message in Model)
                    {
                        <!--if the current user is the sender, align their messages to the right-->
                        @if (message.SenderId == @Context.Request.Cookies["userId"])
                        {
                            <!--Sender side-->
                            <div class="block bg-primary align-content-end text-white mb-3">
                                <p class="text-2xl"> @message.Content </p>
                                <p> @message.SentTime</p>
                            </div>
                        }
                        else
                        {
                            <!--Receiver side-->
                            <div class="block bg-secondary align-content-start text-white mb-3">
                                <p class="text-2xl"> @message.Content </p>
                                <p> @message.SentTime</p>
                            </div>
                        }
                    }
                </div>

                <!--Text box and send button-->
                <div class="input-group text-center mb-3">
                    <!--once the user presses send, save the message to the db ththrough the controller-->
                    <form asp-controller="Chats" onsubmit="sendMessage(event)" method="post">
                        <input type="hidden" name="userId" value="@Context.Request.Cookies["userId"]">
                        <input type="text" class="form-control rounded-pill" name="message-input" id="message-input" placeholder="Send a message...">

                        <div class="col-sm-2 input-group-append">
                            <button class="btn btn-primary rounded-pill" id="send" type="submit">Send</button>
                        </div>

                    </form>
                </div>

            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/js/signalr.min.js"></script>
    <script src="https://www.unpkg.com/axios@1.6.8/dist/axios.min.js"></script>

    <script>

        var connection = new signalR.HubConnectionBuilder().withUrl("/PrivateChatHub").build();

        var _connectionId = '';

        //this will show the message sent by the other user on the page
        connection.on("ReceiveMessage", function (data) {
            var message = document.createElement("div")
            message.classList.add('message block bg-secondary align-content-start text-white mb-3')

            var p = document.createElement("p")
            p.appendChild(document.createTextNode(data.Content))

            var p2 = document.createElement("p")
            p2.appendChild(document.createTextNode(data.CreationDate))

            message.appendChild(p);
            message.appendChild(p2);

            document.querySelector('.messageList').append(message);
        })

       

        //start the connection and get the connection id
        connection.start().then(function () {
            connection.invoke('getConnectionId')
                .then(function (connectionId) {
                    _connectionId = connectionId
                    
                })
                .catch(function (err) {
                    console.log(err)
                })
        })

        var sendMessage = function (event) {
            event.preventDefault();
            var data = new FormData(event.target);
            document.getElementById('message-input').value = '';
            axios.post(data)
                .then(res => {
                    console.log("Message sent!")
                })
                .catch(err => {
                    console.log("Failed to send message!")
                })
        }


    </script>
}



